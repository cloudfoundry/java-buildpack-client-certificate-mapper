<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017-2023 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
                http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.cloudfoundry</groupId>
        <artifactId>java-buildpack-client-certificate-mapper-parent</artifactId>
        <version>2.0.2-SNAPSHOT</version>
    </parent>

    <artifactId>java-buildpack-client-certificate-mapper</artifactId>
    <name>Cloud Foundry Client Certificate Mapper</name>
    <packaging>jar</packaging>
    <url>https://github.com/cloudfoundry/java-buildpack-client-certificate-mapper</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>java-buildpack-client-certificate-mapper-jakarta</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.cloudfoundry</groupId>
            <artifactId>java-buildpack-client-certificate-mapper-javax</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <!--
                Not ideal to merge 2 jars blindly with this plugin, but... after dropping all transitive dependencies from the 2 jars, we found ourselves in a situation where javadoc could not
                   resolve spring and other libraries and hence failed running. Adding manually additional libraries to the Javadoc plugin could work but is not maintainable.
                   -->
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <zip destfile="target/${project.artifactId}-${version}-javadoc.jar">
                                    <zipgroupfileset dir="../${project.artifactId}-jakarta/target/" includes="*javadoc.jar"/>
                                    <zipgroupfileset dir="../${project.artifactId}-javax/target/" includes="*javadoc.jar"/>
                                </zip>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <!--  the default execution is normally first; but I want to force javadoc first, since it will publish an invalid pom, that will be overwritten  -->
                    <execution>
                        <id>default-deploy</id>
                        <phase>none</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy-javadoc</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy-file</goal>
                        </goals>
                        <configuration>
                            <file>target/${project.artifactId}-${version}-javadoc.jar</file>
                            <url>file://${env.REPOSITORY}</url>
                            <groupId>${groupId}</groupId>
                            <artifactId>${artifactId}</artifactId>
                            <version>${version}</version>
                            <packaging>javadoc</packaging>
                        </configuration>
                    </execution>
                    <execution>
                        <id>other-default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createSourcesJar>true</createSourcesJar>
                            <filters>
                                <filter>
                                    <artifact>org.cloudfoundry:java-buildpack-client-certificate-mapper-*</artifact>
                                    <excludes>
                                        <exclude>META-INF/**/*</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <shadeSourcesContent>true</shadeSourcesContent>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
